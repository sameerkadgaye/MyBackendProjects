/**
 * 
 */
package com.practice.controller.jasperReport;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.datasource.DataSourceUtils;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import com.practice.util.ExportReport;

/**
 * @author palash.kharwade
 *
 */

@RestController
@CrossOrigin
public class JasperReportController {

	@Autowired
	JdbcTemplate jdbcTemplate;

		@GetMapping("/printQueryReport/{pdfName}")
		public void printQueryReport(@PathVariable("pdfName") String reportName,
				//@PathVariable("paramValue") Integer paramValue,@PathVariable("paramName") String paramName,
				HttpServletRequest request,HttpServletResponse response) {

			System.out.println(">>>>>>>>>>>>>>>>>>>>>>in print report controller>>>>>>>>>>>>>>>>>>");
			System.out.println("the report name is====="+reportName);
			
			Map<String, Object> parameters = new HashMap<String, Object>();
			System.out.println("-----------------PDF is Generated---------------");			
			Connection conn = null;
			
			try {		
				DataSource ds = (DataSource) jdbcTemplate.getDataSource();
				conn = DataSourceUtils.getConnection(ds);
				new ExportReport().generatePRCReport(reportName, parameters,"pdf", response, conn);
				conn.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
//		@GetMapping("/printQueryReportList/{pdfName}/{paramName}/{paramValue}")
//		public void printQueryReportAllList(@PathVariable("pdfName") String reportName,@PathVariable("paramName") String paramName,@PathVariable("paramValue") Long paramValue, HttpServletRequest request,HttpServletResponse response) {
////			paramName.addEndpoint().setAllowedOrigins("http://localhost:3000").withSockJS();
//			System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>in print report controller...");
////			String paramName = "id";
////			String paramValue = "1";
//			 
//			System.out.println(reportName);
//			System.out.println(paramName);
//			System.out.println(paramValue);
//
//			System.out.println("the report name is------"+reportName);
//			Map<String, Object> parameters = new HashMap<String, Object>();
//			System.out.println("-----------------PDF is Generated By Passing Parameter---------------");		
//						
//			Connection conn = null;
////			paramName = request.getParameter("paramname");
////			paramValue = request.getParameter("paramvalue");
//			String paramNameArr[] = paramName.split("~");
//			Long paramValueArr = paramValue;
//			 System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+paramNameArr.length);
//			 System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"+paramValueArr);
//			for (int i = 0; i < paramNameArr.length; i++) {
//				parameters.put(paramNameArr[i],paramValueArr == 0 ? null : paramValueArr);
//			}
//			try {	
//				DataSource ds = (DataSource) jdbcTemplate.getDataSource();
//				conn = DataSourceUtils.getConnection(ds);
//				new ExportReport().generateCommonReport(reportName, "pdf",parameters, response, conn);
//				conn.close();
//			} catch (Exception e) {
//				e.printStackTrace();
//			}
//		}
		
		@GetMapping("/printQueryReportList/{pdfName}/{paramName}/{paramValue}")
		//public void printQueryReportList(@PathVariable("pdfName") String reportName,@PathVariable("paramName") String paramName,@PathVariable("paramValue") String paramValue, 
		public void printQueryReportAllList(@PathVariable("pdfName") String reportName,@PathVariable("paramName") String paramName,@PathVariable("paramValue") Long paramValue, HttpServletRequest request,HttpServletResponse response) {
//			paramName.addEndpoint().setAllowedOrigins("http://localhost:3000").withSockJS();
			System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>in print report controller...");
//			String paramName = "id";
//			String paramValue = "1";
			
			System.out.println(reportName);
			System.out.println(paramName);
			System.out.println(paramValue);

			System.out.println("the report name is------"+reportName);
		}
		public void printQueryReportList(@PathVariable("pdfName") String reportName,@PathVariable("paramName") String paramName,@PathVariable("paramValue") String paramValue, 

				HttpServletRequest request,HttpServletResponse response) {
//			ReadServerSetting.getValue();
//			HttpSession session = request.getSession();
//			User userObj = (User) session.getAttribute("user");
			
//			String reportName = request.getParameter("p_report_name");


			Map<String, Object> parameters = new HashMap<String, Object>();
			parameters.put("p_entityName", null);// userObj.getEntityName());
			parameters.put("p_branchName", null);// userObj.getBranchName());
			parameters.put("p_branchAddress", null);// userObj.getBranchAddress());
			parameters.put("p_cbsaffno", null);// userObj.getCBSE_AFFILIATION_NO());
			parameters.put("p_udiscno", null);// userObj.getUDISE_CODE());
//			String reportLogo = "";
//			reportLogo = ReadServerSetting.serverPath + "/assets/img/MLWBlogo.png";
//			parameters.put("p_logoPath", reportLogo);

			Connection conn = null;

//			String paramName = request.getParameter("paramname");
//			String paramValue = request.getParameter("paramvalue");
			
			System.out.println("REPORTNAME="+reportName);
			System.out.println("paramName="+paramName);
			System.out.println("paramValue="+paramValue);
			
			String paramNameArr[] = paramName.split("~");
			String paramValueArr[] = paramValue.split("~");
			for (int i = 0; i < paramNameArr.length; i++) {
				parameters.put(paramNameArr[i], paramValueArr[i]);
			}

			try {
				 DataSource ds = jdbcTemplate.getDataSource();
				 conn = DataSourceUtils.getConnection(ds);

//				Class.forName("org.postgresql.Driver");
//				conn = (Connection) DriverManager.getConnection(jdbcUrl, dbUserName, dbPassword);

				new ExportReport().generatePRCReport(reportName, parameters,"pdf", response, conn);
				conn.close();
			} catch (Exception e) {
				try {
					conn.close();
				} catch (SQLException e1) {
					e1.printStackTrace();
				}
				e.printStackTrace();

			}
		}
		
		
		
}
